<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Braincao&#39;s Blog</title>
      <link href="/2020/02/21/blog-index/"/>
      <url>/2020/02/21/blog-index/</url>
      
        <content type="html"><![CDATA[<h2 id="关于博客"><a href="#关于博客" class="headerlink" title="关于博客"></a>关于博客</h2><p>本博客主要记录技术相关的学习笔记与总结，少量包含阶段性节点的成长轨迹与人生思索。它不像微信收藏那样碎片化，也不像商业博文太过公开，它是可自由控制且更为专业性的私人空间。</p><p>所有博文中，绝大多数为原创或有自我沉淀部分，价值高低个人不做评判，因为分享的同时也在收获自己。</p><p>由于第三方评论插件安全性不足，关闭了评论功能，如需联系我请走左下角。当然，本博主随时可接受金钱勾引，在每页最下方点击神奇按钮即可启动资本关怀，这是我最大的动力。</p><h2 id="实时统计"><a href="#实时统计" class="headerlink" title="实时统计"></a>实时统计</h2><p>截至目前，本人已写 <code class="article_number"></code> 篇文章， 共 <code class="site_word_count"></code> 字，</p><p>本站访问人数：<code class="site_uv"></code>人次 ， 访问量：<code class="site_pv"></code>次</p><h2 id="主要功能"><a href="#主要功能" class="headerlink" title="主要功能"></a>主要功能</h2><ul><li>搜索支持文章标题、标签(#标签)、全文搜索(in:)</li><li>pad/手机等移动端适配</li><li>页面全局vim式快捷键，快捷键说明如下</li></ul><table><thead><tr><th align="center">key</th><th align="center">Description</th></tr></thead><tbody><tr><td align="center">s/S</td><td align="center">全屏/取消全屏</td></tr><tr><td align="center">w/W</td><td align="center">显示/关闭文章目录</td></tr><tr><td align="center">gg/GG</td><td align="center">到页顶</td></tr><tr><td align="center">shift+G/g</td><td align="center">到页尾</td></tr><tr><td align="center">j/J</td><td align="center">向下滑动</td></tr><tr><td align="center">k/K</td><td align="center">向上滑动</td></tr><tr><td align="center">i/I</td><td align="center">启动搜索</td></tr><tr><td align="center">ESC</td><td align="center">若搜索框有内容，清除内容； 若搜索框无内容，取消搜索</td></tr><tr><td align="center">上</td><td align="center">向上选择文章</td></tr><tr><td align="center">下</td><td align="center">向下选择文章</td></tr><tr><td align="center">回车</td><td align="center">打开当前选中的文章，默认打开第一个</td></tr></tbody></table>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>修改hosts-加速github访问速度</title>
      <link href="/2020/02/20/github-hosts/"/>
      <url>/2020/02/20/github-hosts/</url>
      
        <content type="html"><![CDATA[<p>通过修改hosts，解决github访问慢及加载不出头像问题</p><a id="more"></a><h1 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h1><p>github访问慢及加载不出头像问题</p><h1 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h1><p>在<a href="https://www.ipaddress.com/" target="_blank" rel="noopener">https://www.ipaddress.com/</a>网站查下列域名对应的IP地址，如果同一个域名有好几个ip，那就ping一下选个速度最快的。</p><p>修改hosts，<code>sudo vi /etc/hosts</code>，添加下面域名解析，再刷新dns：<code>sudo killall -HUP mDNSResponder</code></p><pre><code>#解决git clone 速度慢的问题,这个不要动192.30.253.112 github.com151.101.185.194 github.global.ssl.fastly.net#下面的实时查192.30.253.119 gist.github.com199.232.28.133 assets-cdn.github.com199.232.28.133 raw.githubusercontent.com199.232.28.133 gist.githubusercontent.com199.232.28.133 cloud.githubusercontent.com199.232.28.133 camo.githubusercontent.com199.232.28.133 avatars0.githubusercontent.com199.232.28.133 avatars1.githubusercontent.com199.232.28.133 avatars2.githubusercontent.com199.232.28.133 avatars3.githubusercontent.com199.232.28.133 avatars4.githubusercontent.com199.232.28.133 avatars5.githubusercontent.com199.232.28.133 avatars6.githubusercontent.com199.232.28.133 avatars7.githubusercontent.com199.232.28.133 avatars8.githubusercontent.com#解决浏览器下载master-zip包的问题140.82.113.10 codeload.github.com</code></pre>]]></content>
      
      
      <categories>
          
          <category> 综合技术问题 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hosts </tag>
            
            <tag> github </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>单链表的c++实现</title>
      <link href="/2018/03/21/%E5%8D%95%E9%93%BE%E8%A1%A8%E7%9A%84c++%E5%AE%9E%E7%8E%B0/"/>
      <url>/2018/03/21/%E5%8D%95%E9%93%BE%E8%A1%A8%E7%9A%84c++%E5%AE%9E%E7%8E%B0/</url>
      
        <content type="html"><![CDATA[<p>这个一篇单链表的c++实现小练习</p><a id="more"></a><pre><code class="c++">    #include&lt;iostream&gt;    using namespace std;    /**     * 单链表的c++实现     */    struct node    {        int val;        struct node* next;        node(int v): val(v), next(NULL) {}    };    class List    {    private:        node* head;    public:        List()        {            head = NULL;        }        ~List();        void insert(int val);        int getLen();        void print();    };    List::~List()    {        node* p;        while(head!=NULL)        {            p = head;            head = head-&gt;next;            delete(p);        }    }    void List::insert(int val) {        node* node_p = new node(val);        node* p = head;        if(p == NULL)        {            head = node_p;            return;        }        while(p-&gt;next != NULL)        {            p = p-&gt;next;        }        p-&gt;next = node_p;    }    int List::getLen() {        node* p = head;        int res = 0;        while(p != NULL)        {            res += 1;            p = p-&gt;next;        }        return res;    }    void List::print() {        node* p = head;        while(p != NULL)        {            cout&lt;&lt;p-&gt;val&lt;&lt;endl;            p = p-&gt;next;        }    }    int main()    {        List l;        cout&lt;&lt;l.getLen()&lt;&lt;endl;        l.insert(2);        cout&lt;&lt;l.getLen()&lt;&lt;endl;        l.insert(3);        cout&lt;&lt;l.getLen()&lt;&lt;endl;        l.print();        return 0;    }</code></pre><p>版权声明：本文为原创文章，客官如需转载请注明，感谢支持</p><pre><code>转载自：[Braincao&#39;s Blog的博客](https://braincao.github.io)</code></pre>]]></content>
      
      
      <categories>
          
          <category> leetcode与算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 链表 </tag>
            
            <tag> 单链表 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo博客系统搭建过程</title>
      <link href="/2018/02/22/build-hexo/"/>
      <url>/2018/02/22/build-hexo/</url>
      
        <content type="html"><![CDATA[<p>搭建Hexo博客的经验贴，便于日后查看，也希望小白少走些弯路</p><a id="more"></a><p>说道技术博客，最开始在csdn上记录技术学习笔记较多，坚持时间较长。后来也迁移副本至博客园，可能先入为主的原因，之后一直没再同步更新，今天直接把博客园删了。同样，先前也有自己搭建过一次博客，jekyll系统、Hexo系统都做过，后来因为考研的原因也都草草收场。博客虽搁置一边但笔记还要记啊，懒出天际的我直接markdown文档保存在电脑中，这些待嫁的深闺文章越积越多，毕业前的寒假闲来无事，突然想起这些烂摊子该理一理。</p><p>除了csdn/cnblog/语雀这种商业博客，先后几次自己动手搭建个人博客，有从头写html/css/js的作坊博客，当然也有最后确定要用的hexo博客系统。</p><p>hexo好处多多，不用自己架服务器，同时主题样式可选种类较多，开源且稳定，最开始用的时候用github管理，后来由于各种原因墙内访问越来越慢（你懂），因此就搭建个人博客来说选择gitee来做托管仓库，访问速度提升不少。</p><p>这里附上我的博客，欢迎交流：<a href="https://braincao.cn/">https://braincao.cn/</a></p><p>下面主要总结一下gitee+hexo的搭建过程以及遇到的坑，如果用github也是异曲同工，对号入座即可。</p><h1 id="一、先搭建-建立博客系统"><a href="#一、先搭建-建立博客系统" class="headerlink" title="一、先搭建-建立博客系统"></a>一、先搭建-建立博客系统</h1><h2 id="安装node-js"><a href="#安装node-js" class="headerlink" title="安装node.js"></a>安装node.js</h2><p>到<a href="https://nodejs.org/en/" target="_blank" rel="noopener">node.js</a>官网下载node.js并安装</p><h2 id="安装Git"><a href="#安装Git" class="headerlink" title="安装Git"></a>安装Git</h2><p>自行百度安装</p><h2 id="本地建立hexo系统"><a href="#本地建立hexo系统" class="headerlink" title="本地建立hexo系统"></a>本地建立hexo系统</h2><p>安装hexo：</p><pre><code>sudo npm install -g hexo-cli</code></pre><p>本地创建自己的blog目录，如HexoBlog，在该目录下进行Hexo初始化：</p><pre><code>hexo init HexoBlogcd ~/HexoBlog/npm install</code></pre><h2 id="远程建立gitee上的hexo系统"><a href="#远程建立gitee上的hexo系统" class="headerlink" title="远程建立gitee上的hexo系统"></a>远程建立gitee上的hexo系统</h2><p>用Gitee Pages建立gitee远程博客仓库。</p><ol><li><p>码云注册并建立名为hexoblog的仓库（使用readme初始化项目）</p></li><li><p>通过 <code>hexoblog项目-&gt;Service-&gt;Gitee Pages服务</code> 建立博客仓库，它会自动生成博客地址，下文会介绍自定义域名绑定博客地址</p></li><li><p>添加ssh key：将本地的id_rsa.pub添加到gitee个人中心的ssh key中。为什么要添加ssh key？ 原因：后续想用git方式通过ssh与远程仓库连接，快捷一些，但为了安全起见，需要公密钥的方式来连接。本地设置gitglobal的user.name user.email，生成一个基于如user.email的ssh key，它是一对私钥和公钥，私钥自己保存别动它，把ssh key中的公钥添加到github官网自己账号中，这样就可以用自己设备很方便的连接至自己的github并享受其服务。如有多台设备，可以每台设备生成一对ssh key，并将多个公钥添加github账号中即可，这样就可以实现多台设备无缝连接，便于移动办公。</p></li><li><p>在_config.yml中配置博客url、远程Git：</p></li></ol><pre><code># 码云需要配下面两行，否则会出现主题样式展示有问题，github貌似不用配url: https://braincao.cnroot: /# 都要配deploy:  type: git  repo: git@gitee.com:username/repo.git  branch: master</code></pre><h2 id="发布博客到gitee"><a href="#发布博客到gitee" class="headerlink" title="发布博客到gitee"></a>发布博客到gitee</h2><p>安装Hexo必备插件：</p><pre><code>npm install hexo-deployer-git --save #hexo通过git发布</code></pre><p>输入命令发布博客，首次发布需要在shell中输入账号和密码:</p><pre><code>hexo clean &amp;&amp; hexo g &amp;&amp; hexo d</code></pre><p>github会发布后会自动更新博客页面，码云将此功能变为人民币玩家功能，因此发布后需要在码云仓库中手动update才能更新博客</p><h2 id="附常用hexo命令"><a href="#附常用hexo命令" class="headerlink" title="附常用hexo命令"></a>附常用hexo命令</h2><pre><code>hexo clean #清除public静态页面缓存（如果有）hexo new page &quot;pageName&quot; #新建页面hexo help  # 查看帮助hexo version  #查看Hexo的版本hexo new &quot;postName&quot; #新建文章简写:hexo n == hexo new #新建文章hexo g == hexo generate #生成静态页面至public目录hexo s == hexo server #本地服务，http://localhost:4000预览hexo d == hexo deploy #部署至github仓库完成博客发布hexo n page &#39;about&#39; #建立导航栏菜单，如about关于页面</code></pre><h1 id="二、后装修-个性化配置"><a href="#二、后装修-个性化配置" class="headerlink" title="二、后装修-个性化配置"></a>二、后装修-个性化配置</h1><p>个性化配置主要包括站点配置与主题配置，跟着<a href="https://hexo.io/zh-cn/" target="_blank" rel="noopener">hexo官方文档</a>、每个主题的官方指导走就行。第三方功能包括但不限于：首页全文阅读、站内搜索、访问人数、字数统计、打赏功能、多说评论、404页面、RSS、sitemap</p><p>下面仅以3-hexo为例，罗列下我的个性化配置。</p><h2 id="主题下载"><a href="#主题下载" class="headerlink" title="主题下载"></a>主题下载</h2><p>Hexo系统有很多主题，较为主流的如Next主题，本文采用3-hexo主题。<br>    git clone <a href="https://github.com/yelog/hexo-theme-3-hexo.git" target="_blank" rel="noopener">https://github.com/yelog/hexo-theme-3-hexo.git</a> themes/3-hexo</p><h2 id="主题配置"><a href="#主题配置" class="headerlink" title="主题配置"></a>主题配置</h2><p>在根目录的站点配置文件配置主题即可</p><pre><code>theme: 3-hexo</code></pre><p>这里注意3-hexo主题有个坑，配置时还需在主题配置文件中更改根目录：</p><pre><code>#如果博客放置位置不是根目录，则可以通过配置此路径解决静态文件路径错误问题#比如访问地址为 yelog.org/blog 那就需要配置为 blog_path: /blog 才能正常访问blog_path: /hexoblog #记得改这里，初始是/</code></pre><h2 id="顺着主题-站点配置文件改"><a href="#顺着主题-站点配置文件改" class="headerlink" title="顺着主题/站点配置文件改"></a>顺着主题/站点配置文件改</h2><p>更改能看懂的先，如作者、头像、github/邮箱地址、评论、友情链接、打赏二维码、置顶、评论(gitalk)等，看不懂的先别改。</p><p>这里有个点，3-hexo有自己的语法高亮，因此需把hexo站点高亮关了</p><pre><code>highlight:  enable: false  #true改成false</code></pre><h2 id="文章分类-amp-md头部"><a href="#文章分类-amp-md头部" class="headerlink" title="文章分类 &amp; md头部"></a>文章分类 &amp; md头部</h2><p>写md时直接分类即可，另外3-hexo原生支持多级分类（在主题配置文件中有详细介绍），具体的md头部如下：</p><pre><code>---title: 剑指offer刷题date: 2018-09-21 17:32:47updated: 2020-02-19 14:36:48categories:    - 算法刷题tags:    - 剑指offer刷题top: 1originUrl: https://zhuanlan.zhihu.com/p/28987530source: mac mdimg source: csdn——如果有图的话就在csdn上编辑，再同步至mac md上，最后再从mac md源进行全网同步---</code></pre><p>注意：有的主题首页只显示文章的简介(全文阅读)：在md文章中的合适位置添加 &lt; !–more–&gt; 标签即可，之前的文字都会写在首页文章名称下面的简介里</p><h2 id="关于、相册等导航栏菜单建立"><a href="#关于、相册等导航栏菜单建立" class="headerlink" title="关于、相册等导航栏菜单建立"></a>关于、相册等导航栏菜单建立</h2><p>Hexo里，默认的导航菜单只有Home和Archives两项，还需自行添加其他导航栏菜单</p><pre><code>hexo n page &#39;about&#39;</code></pre><p>这样就建立了source/about文件夹，然后在主题配置文件中：</p><pre><code>menu:  Home: /  About: /about  #注意3-hexo主题这里需要改成hexoblog/about</code></pre><p>在menu中加了一项设置About: /about，前面部分是显示名称，后面部分是访问路径，即source/about中的index.md，就是想要访问About时的页面。同理，还可添加别的菜单，如  <code>Archives: /archives</code>、<code>Photo: /photo</code>等</p><h2 id="自定义域名"><a href="#自定义域名" class="headerlink" title="自定义域名"></a>自定义域名</h2><p>gitee pages 会自动生成hexo博客地址，可正常访问，如果有自定义域名需要则要进行如下操作。</p><ol><li><p>阿里云购买域名、购买云解析dns服务，再购买免费的DVssl安全证书</p></li><li><p>在云解析dns服务中配置域名解析：添加CNAME，记录值为<code>gitee.gitee.io</code></p></li><li><p>在本地hexo根目录的source文件夹中新建CNAME文件，里面写自定义的域名<code>braincao.cn</code>，然后<code>hexo clean &amp; hexo g &amp; hexo d</code></p></li><li><p>在gitee的page service中添加自定义域名 braincao.cn，再把已买好的ssl证书上传，即可生成<code>https://braincao.cn</code>的博客地址</p></li></ol><p>这样就可以通过自定义域名访问博客地址了，自定义域名的好处可以不透漏gitee项目地址，通过阿里云有负载均衡等付费服务，访问延时更低</p><h2 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h2><p>至此，已基本完成Hexo博客系统搭建，剩下需要做的就是内容产出了。</p><p>截止完成本文时，看了下我的CSDN博客统计：原创 <strong>137</strong> 篇，访问量 <strong>28万+</strong>，排名 <strong>2万</strong>，其中最热门的 <a href="http://blog.csdn.net/pop_rain/article/details/70477085" target="_blank" rel="noopener">Win10+Ubuntu17.04双系统安装</a> 访问量 <strong>12万+</strong>。由此说明一个完整的入门贴对于小白来说还是有所帮助的，而本人做博客的初衷之一也是希望记录自己成长过程的同时分享给更多同行自己遇到的坑和响应的解决方案；同样，每当入门一个全新的领域如能看到同行前辈分享的完整学习贴也会感激万分，这种正向反馈给我坚持技术分享的动力。技术之路无穷尽，但希望在这条充满挑战兼具无尽获得感的路上，我们都会编程出属于自己的那片天，熠熠生辉。</p>]]></content>
      
      
      <categories>
          
          <category> 综合技术问题 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客搭建 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
